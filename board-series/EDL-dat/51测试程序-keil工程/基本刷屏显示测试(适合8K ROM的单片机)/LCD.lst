C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD.lst) OBJECT(LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <font\font.h>
   4          #include <sys\sys.h>
   5          #include <lcd\lcd.h>
   6          /* http://ttmcu.taobao.com 雨亭电子
   7          代码测试环境:JME-2核心板+1T指令周期的STC单片机（51内核STC12LE5A60S2)+33M晶振      单片机工作电压3.3V
   8          程序默认IO连接方式：
   9          控制线：RS-P3^5;    WR-P3^6;   RD-P3^7;   CS-P1^0;   REST-P1^2;
  10          数据线: DB0-DB7依次连接P0^0-P0^7;  DB8-DB15依次连接P2^0-P2^7;（8位模式下DB0-DB7可以不连接）
  11          触摸功能连接方式：(不使用触摸可不连接)
  12          D_CLK-P1^7;  D_CS-P1^4;  D_DIN-P3^0;  D_OUT-P3^1;  D_PENIRQ-P3^4;
  13          */
  14          u16 BACK_COLOR, POINT_COLOR;   //背景色，画笔色
  15          
  16          u16  HDP=479;
  17          u16  HT=531;
  18          u16  HPS=43;
  19          u16  LPS=8;
  20          u8   HPW=10;
  21          
  22          u16  VDP=271;
  23          u16  VT=288;
  24          u16  VPS=12;
  25          u16  FPS=4;
  26          u8   VPW=10;
  27          
  28          
  29          #ifdef  Bus_16    //条件编译-16位数据模式   
  30          void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
  31          {
  32   1          LCD_DataPortH=VH;   
  33   1              LCD_DataPortL=VL;               
  34   1              LCD_WR=0;
  35   1              LCD_WR=1; 
  36   1      }
  37          #else                   //条件编译-8位数据模式 
              void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
              {       
                  LCD_DataPortH=VH;   
                      LCD_WR=0;
                      LCD_WR=1;
                      LCD_DataPortH=VL;               
                      LCD_WR=0;
                      LCD_WR=1;
              }
              #endif
  48          void LCD_WR_DATA8(char VH,char VL) //发送数据-8位参数
  49          {
  50   1          LCD_RS=1;
  51   1              LCD_Writ_Bus(VH,VL);
  52   1      }  
  53           void LCD_WR_DATA(int da)
  54          {
  55   1          LCD_RS=1;
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 2   

  56   1              LCD_Writ_Bus(da>>8,da);
  57   1      }         
  58          void LCD_WR_REG(int da)  
  59          {       
  60   1          LCD_RS=0;
  61   1              LCD_Writ_Bus(da>>8,da);
  62   1      }
  63           void LCD_WR_REG_DATA(int reg,int da)
  64          {
  65   1          LCD_WR_REG(reg);
  66   1              LCD_WR_DATA(da);
  67   1      }
  68          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
  69          { 
  70   1              LCD_WR_REG(0x002A);     
  71   1              LCD_WR_DATA(x1>>8);         
  72   1              LCD_WR_DATA(x1&0x00ff);
  73   1              LCD_WR_DATA(x2>>8);         
  74   1              LCD_WR_DATA(x2&0x00ff);
  75   1          LCD_WR_REG(0x002b); 
  76   1              LCD_WR_DATA(y1>>8);         
  77   1              LCD_WR_DATA(y1&0x00ff);
  78   1              LCD_WR_DATA(y2>>8);         
  79   1              LCD_WR_DATA(y2&0x00ff);
  80   1              LCD_WR_REG(0x002c);                                                                                      
  81   1      }
  82          void Lcd_Init(void)
  83          {
  84   1      
  85   1      //调用一次这些函数，免得编译的时候提示警告
  86   1              LCD_CS =1;
  87   1              if(LCD_CS==0)
  88   1              {
  89   2                 LCD_WR_REG_DATA(0,0);
  90   2                 LCD_ShowString(0,0," ");
  91   2                 LCD_ShowNum(0,0,0,0);
  92   2                 LCD_Show2Num(0,0,0,0);
  93   2                 LCD_DrawPoint_big(0,0);
  94   2                 LCD_DrawRectangle(0,0,0,0);
  95   2                 Draw_Circle(0,0,0);
  96   2          }
  97   1              LCD_RD=1;
  98   1              LCD_WR=1;
  99   1              LCD_REST=0;
 100   1              delayms(20);    //此处保证要有5ms以上才能保证复位稳定,推荐20ms
 101   1              LCD_REST=1;     
 102   1              delayms(20);    //此处保证要有5ms以上才能保证复位稳定,推荐20ms          
 103   1              LCD_CS =0;  //打开片选使能
 104   1      
 105   1              LCD_WR_REG(0x00E2);     //PLL multiplier, set PLL clock to 120M
 106   1              LCD_WR_DATA(0x002d);        //N=0x36 for 6.5M, 0x23 for 10M crystal
 107   1              LCD_WR_DATA(0x0002);
 108   1              LCD_WR_DATA(0x0004);
 109   1              LCD_WR_REG(0x00E0);  // PLL enable
 110   1              LCD_WR_DATA(0x0001);
 111   1              delayms(1);
 112   1              LCD_WR_REG(0x00E0);
 113   1              LCD_WR_DATA(0x0003);
 114   1              delayms(5);
 115   1              LCD_WR_REG(0x0001);  // software reset
 116   1              delayms(5);
 117   1              LCD_WR_REG(0x00E6);     //PLL setting for PCLK, depends on resolution
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 3   

 118   1              LCD_WR_DATA(0x0000);
 119   1              LCD_WR_DATA(0x00ff);
 120   1              LCD_WR_DATA(0x00be);
 121   1      
 122   1              LCD_WR_REG(0x00B0);     //LCD SPECIFICATION
 123   1              LCD_WR_DATA(0x0020);
 124   1              LCD_WR_DATA(0x0000);
 125   1              LCD_WR_DATA((HDP>>8)&0X00FF);  //Set HDP
 126   1              LCD_WR_DATA(HDP&0X00FF);
 127   1          LCD_WR_DATA((VDP>>8)&0X00FF);  //Set VDP
 128   1              LCD_WR_DATA(VDP&0X00FF);
 129   1          LCD_WR_DATA(0x0000);
 130   1              delayms(5);
 131   1              LCD_WR_REG(0x00B4);     //HSYNC
 132   1              LCD_WR_DATA((HT>>8)&0X00FF);  //Set HT
 133   1              LCD_WR_DATA(HT&0X00FF);
 134   1              LCD_WR_DATA((HPS>>8)&0X00FF);  //Set HPS
 135   1              LCD_WR_DATA(HPS&0X00FF);
 136   1              LCD_WR_DATA(HPW);                          //Set HPW
 137   1              LCD_WR_DATA((LPS>>8)&0X00FF);  //SetLPS
 138   1              LCD_WR_DATA(LPS&0X00FF);
 139   1              LCD_WR_DATA(0x0000);
 140   1      
 141   1              LCD_WR_REG(0x00B6);     //VSYNC
 142   1              LCD_WR_DATA((VT>>8)&0X00FF);   //Set VT
 143   1              LCD_WR_DATA(VT&0X00FF);
 144   1              LCD_WR_DATA((VPS>>8)&0X00FF);  //Set VPS
 145   1              LCD_WR_DATA(VPS&0X00FF);
 146   1              LCD_WR_DATA(VPW);                          //Set VPW
 147   1              LCD_WR_DATA((FPS>>8)&0X00FF);  //Set FPS
 148   1              LCD_WR_DATA(FPS&0X00FF);
 149   1      
 150   1      
 151   1              LCD_WR_REG(0x0036); //rotation
 152   1              LCD_WR_DATA(0x0000);
 153   1      
 154   1              LCD_WR_REG(0x00F0); //pixel data interface
 155   1              LCD_WR_DATA(0x0003);
 156   1      
 157   1      
 158   1              delayms(5);
 159   1      
 160   1      
 161   1              LCD_WR_REG(0x0029); //display on
 162   1      
 163   1              LCD_WR_REG(0x00BE); //set PWM for B/L
 164   1              LCD_WR_DATA(0x0006);
 165   1              LCD_WR_DATA(0x00f0);
 166   1              LCD_WR_DATA(0x0001);
 167   1              LCD_WR_DATA(0x00f0);
 168   1              LCD_WR_DATA(0x0000);
 169   1              LCD_WR_DATA(0x0000);
 170   1      
 171   1              LCD_WR_REG(0x00d0); 
 172   1              LCD_WR_DATA(0x000d);
 173   1      
 174   1          //----------LCD RESET---GPIO0-------------------//
 175   1              LCD_WR_REG(0x00B8);
 176   1              LCD_WR_DATA(0x0000);    //GPIO3=input, GPIO[2:0]=output
 177   1              LCD_WR_DATA(0x0001);    //GPIO0 normal
 178   1      
 179   1              LCD_WR_REG(0x00BA);
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 4   

 180   1              LCD_WR_DATA(0x0000);  
 181   1      }
 182          //清屏函数
 183          //Color:要清屏的填充色
 184          void LCD_Clear(u16 Color)
 185          {
 186   1              u8 VH,VL;
 187   1              u16 i,j;
 188   1              VH=Color>>8;
 189   1              VL=Color;       
 190   1              Address_set(0,0,LCD_W-1,LCD_H-1);
 191   1          for(i=0;i<LCD_W;i++)
 192   1               {
 193   2                for (j=0;j<LCD_H;j++)
 194   2                      {
 195   3                       LCD_WR_DATA8(VH,VL);
 196   3                  }
 197   2      
 198   2                }
 199   1      }
 200          //画点
 201          //POINT_COLOR:此点的颜色
 202          void LCD_DrawPoint(u16 x,u16 y)
 203          {
 204   1              Address_set(x,y,x,y);//设置光标位置 
 205   1              LCD_WR_DATA(POINT_COLOR);           
 206   1      }        
 207          //画一个大点
 208          //POINT_COLOR:此点的颜色
 209          void LCD_DrawPoint_big(u16 x,u16 y)
 210          {
 211   1              LCD_Fill(x-1,y-1,x+1,y+1,POINT_COLOR);
 212   1      } 
 213          //在指定区域内填充指定颜色
 214          //区域大小:
 215          //  (xend-xsta)*(yend-ysta)
 216          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 217          {          
 218   1              u16 i,j; 
 219   1              Address_set(xsta,ysta,xend,yend);      //设置光标位置 
 220   1              for(i=ysta;i<=yend;i++)
 221   1              {                                                                                                                       
 222   2                      for(j=xsta;j<=xend;j++)LCD_WR_DATA(color);//设置光标位置            
 223   2              }                                                   
 224   1      }  
 225          //画线
 226          //x1,y1:起点坐标
 227          //x2,y2:终点坐标  
 228          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 229          {
 230   1              u16 t; 
 231   1              int xerr=0,yerr=0,delta_x,delta_y,distance; 
 232   1              int incx,incy,uRow,uCol; 
 233   1      
 234   1              delta_x=x2-x1; //计算坐标增量 
 235   1              delta_y=y2-y1; 
 236   1              uRow=x1; 
 237   1              uCol=y1; 
 238   1              if(delta_x>0)incx=1; //设置单步方向 
 239   1              else if(delta_x==0)incx=0;//垂直线 
 240   1              else {incx=-1;delta_x=-delta_x;} 
 241   1              if(delta_y>0)incy=1; 
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 5   

 242   1              else if(delta_y==0)incy=0;//水平线 
 243   1              else{incy=-1;delta_y=-delta_y;} 
 244   1              if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 245   1              else distance=delta_y; 
 246   1              for(t=0;t<=distance+1;t++ )//画线输出 
 247   1              {  
 248   2                      LCD_DrawPoint(uRow,uCol);//画点 
 249   2                      xerr+=delta_x ; 
 250   2                      yerr+=delta_y ; 
 251   2                      if(xerr>distance) 
 252   2                      { 
 253   3                              xerr-=distance; 
 254   3                              uRow+=incx; 
 255   3                      } 
 256   2                      if(yerr>distance) 
 257   2                      { 
 258   3                              yerr-=distance; 
 259   3                              uCol+=incy; 
 260   3                      } 
 261   2              }  
 262   1      }    
 263          //画矩形
 264          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 265          {
 266   1              LCD_DrawLine(x1,y1,x2,y1);
 267   1              LCD_DrawLine(x1,y1,x1,y2);
 268   1              LCD_DrawLine(x1,y2,x2,y2);
 269   1              LCD_DrawLine(x2,y1,x2,y2);
 270   1      }
 271          //在指定位置画一个指定大小的圆
 272          //(x,y):中心点
 273          //r    :半径
 274          void Draw_Circle(u16 x0,u16 y0,u8 r)
 275          {
 276   1              int a,b;
 277   1              int di;
 278   1              a=0;b=r;          
 279   1              di=3-(r<<1);             //判断下个点位置的标志
 280   1              while(a<=b)
 281   1              {
 282   2                      LCD_DrawPoint(x0-b,y0-a);             //3           
 283   2                      LCD_DrawPoint(x0+b,y0-a);             //0           
 284   2                      LCD_DrawPoint(x0-a,y0+b);             //1       
 285   2                      LCD_DrawPoint(x0-b,y0-a);             //7           
 286   2                      LCD_DrawPoint(x0-a,y0-b);             //2             
 287   2                      LCD_DrawPoint(x0+b,y0+a);             //4               
 288   2                      LCD_DrawPoint(x0+a,y0-b);             //5
 289   2                      LCD_DrawPoint(x0+a,y0+b);             //6 
 290   2                      LCD_DrawPoint(x0-b,y0+a);             
 291   2                      a++;
 292   2                      //使用Bresenham算法画圆     
 293   2                      if(di<0)di +=4*a+6;       
 294   2                      else
 295   2                      {
 296   3                              di+=10+4*(a-b);   
 297   3                              b--;
 298   3                      } 
 299   2                      LCD_DrawPoint(x0+a,y0+b);
 300   2              }
 301   1      } 
 302          //在指定位置显示一个字符
 303          
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 6   

 304          //num:要显示的字符:" "--->"~"
 305          //mode:叠加方式(1)还是非叠加方式(0)
 306          //在指定位置显示一个字符
 307          
 308          //num:要显示的字符:" "--->"~"
 309          
 310          //mode:叠加方式(1)还是非叠加方式(0)
 311          void LCD_ShowChar(u16 x,u16 y,u8 num,u8 mode)
 312          {
 313   1          u8 temp;
 314   1          u8 pos,t;
 315   1              u16 x0=x;
 316   1              u16 colortemp=POINT_COLOR;      
 317   1          if(x>LCD_W-16||y>LCD_H-16)return;       
 318   1              //设置窗口                 
 319   1              num=num-' ';//得到偏移后的值
 320   1              Address_set(x,y,x+8-1,y+16-1);      //设置光标位置 
 321   1              if(!mode) //非叠加方式
 322   1              {
 323   2                      for(pos=0;pos<16;pos++)
 324   2                      { 
 325   3                              temp=asc2_1608[(u16)num*16+pos];                 //调用1608字体
 326   3                              for(t=0;t<8;t++)
 327   3                          {                 
 328   4                              if(temp&0x01)POINT_COLOR=colortemp;
 329   4                                      else POINT_COLOR=BACK_COLOR;
 330   4                                      LCD_WR_DATA(POINT_COLOR);       
 331   4                                      temp>>=1; 
 332   4                                      x++;
 333   4                          }
 334   3                              x=x0;
 335   3                              y++;
 336   3                      }       
 337   2              }else//叠加方式
 338   1              {
 339   2                      for(pos=0;pos<16;pos++)
 340   2                      {
 341   3                          temp=asc2_1608[(u16)num*16+pos];             //调用1608字体
 342   3                              for(t=0;t<8;t++)
 343   3                          {                 
 344   4                              if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点     
 345   4                              temp>>=1; 
 346   4                          }
 347   3                      }
 348   2              }
 349   1              POINT_COLOR=colortemp;                            
 350   1      }   
 351          //m^n函数
 352          u32 mypow(u8 m,u8 n)
 353          {
 354   1              u32 result=1;    
 355   1              while(n--)result*=m;    
 356   1              return result;
 357   1      }                        
 358          //显示2个数字
 359          //x,y :起点坐标  
 360          //len :数字的位数
 361          //color:颜色
 362          //num:数值(0~4294967295);       
 363          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len)
 364          {               
 365   1              u8 t,temp;
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 7   

 366   1              u8 enshow=0;
 367   1              num=(u16)num;
 368   1              for(t=0;t<len;t++)
 369   1              {
 370   2                      temp=(num/mypow(10,len-t-1))%10;
 371   2                      if(enshow==0&&t<(len-1))
 372   2                      {
 373   3                              if(temp==0)
 374   3                              {
 375   4                                      LCD_ShowChar(x+8*t,y,' ',0);
 376   4                                      continue;
 377   4                              }else enshow=1; 
 378   3                               
 379   3                      }
 380   2                      LCD_ShowChar(x+8*t,y,temp+48,0); 
 381   2              }
 382   1      } 
 383          //显示2个数字
 384          //x,y:起点坐标
 385          //num:数值(0~99);        
 386          void LCD_Show2Num(u16 x,u16 y,u16 num,u8 len)
 387          {               
 388   1              u8 t,temp;                                                 
 389   1              for(t=0;t<len;t++)
 390   1              {
 391   2                      temp=(num/mypow(10,len-t-1))%10;
 392   2                      LCD_ShowChar(x+8*t,y,temp+'0',0); 
 393   2              }
 394   1      } 
 395          //显示字符串
 396          //x,y:起点坐标  
 397          //*p:字符串起始地址
 398          //用16字体
 399          void LCD_ShowString(u16 x,u16 y,const u8 *p)
 400          {         
 401   1          while(*p!='\0')
 402   1          {       
 403   2              if(x>LCD_W-16){x=0;y+=16;}
 404   2              if(y>LCD_H-16){y=x=0;LCD_Clear(RED);}
 405   2              LCD_ShowChar(x,y,*p,0);
 406   2              x+=8;
 407   2              p++;
 408   2          }  
 409   1      }
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3080    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =     22     115
C51 COMPILER V9.01   LCD                                                                   02/22/2014 15:59:57 PAGE 8   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
